<Window x:Class="PracticalExamApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PracticalExamApp" 
        xmlns:viewmodel="clr-namespace:PracticalExamApp.ViewModel" 
        xmlns:xamlValidators="clr-namespace:PracticalExamApp.Validation.XamlValidators"
        xmlns:converters="clr-namespace:PracticalExamApp.Converters"
        xmlns:validation="https://github.com/GuOrg/Gu.Wpf.ValidationScope"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1608"
        Name="thisWindow">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:StringToIntConverter x:Key="StringToIntConverter"/>

        <ControlTemplate x:Key="errorTemplate">
            <DockPanel>
                <Border Background="OrangeRed" HorizontalAlignment="Right" DockPanel.Dock="Right"
                        Margin="3,0,0,0" Width="20" Height="20" CornerRadius="5"
                        ToolTip="{Binding ElementName=adoner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center"
                               FontWeight="Bold" Foreground="white" />
                </Border>
                <AdornedElementPlaceholder x:Name="adoner" VerticalAlignment="Center">
                    <Border BorderBrush="red" BorderThickness="1" />
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!--#region Wersja z odwołanem poprzez nazwę kontrolek-->
        <StackPanel Grid.Column="0" Grid.Row="0">
            <TextBlock Text="Wersja z odwołanem poprzez nazwę kontrolek" 
                   HorizontalAlignment="Center"
                   FontSize="20" 
                   FontWeight="Bold"
                   TextWrapping="Wrap"/>
            <StackPanel>
                <TextBlock Text="Podaj imie:"/>
                <TextBox x:Name="entryName"/>
                <Label Content="Podaj wiek:"/>
                <TextBox x:Name="entryAge"/>
            </StackPanel>
            <Button Content="Sprawdź"
                x:Name="buttonCheck"
                Click="buttonCheck_Clicked"
                Margin="10"/>
            <StackPanel>
                <TextBlock x:Name="labelHello"/>
                <TextBlock x:Name="labelLegalAge"/>
            </StackPanel>
        </StackPanel>
        <!--#endregion-->

        <!--#region Wersja z bindowaniem-->
        <StackPanel Grid.Column="1" Grid.Row="0">
            <TextBlock Text="Wersja z bindowaniem" 
                   HorizontalAlignment="Center"
                   FontSize="20" 
                   FontWeight="Bold"
                   TextWrapping="Wrap"/>
            <StackPanel>
                <TextBlock Text="Podaj imie:"/>
                <TextBox Text="{Binding ElementName=thisWindow, Path=FirstErrorVM.Name}"/>
                <Label Content="Podaj wiek:"/>
                <TextBox Text="{Binding ElementName=thisWindow,Path=FirstErrorVM.StrAge}"/>
            </StackPanel>
            <Button Content="Sprawdź (bindowanie)"
                Command="{Binding ElementName=thisWindow,Path=FirstErrorVM.CommandCheckBinding}"
                Margin="10"/>
            <StackPanel>
                <TextBlock Text="{Binding ElementName=thisWindow,Path=FirstErrorVM.HelloMessage}"/>
                <TextBlock Text="{Binding ElementName=thisWindow,Path=FirstErrorVM.LegalAgeMessage}"/>
            </StackPanel>
        </StackPanel>
        <!--#endregion-->

        <!--#region Wersja z bindowaniem i wszystkimi błędami-->
        <StackPanel Grid.Column="0" Grid.Row="1">
            <TextBlock Text="Wersja z bindowaniem i wszystkimi błędami" 
                   HorizontalAlignment="Center"
                   FontSize="20" 
                   FontWeight="Bold"
                   TextWrapping="Wrap"/>
            <StackPanel>
                <TextBlock Text="Podaj imie:"/>
                <TextBox Text="{Binding ElementName=thisWindow, Path=AllErrorsVM.Name}"/>
                <TextBlock Text="{Binding ElementName=thisWindow, Path=AllErrorsVM.MessageErrorName}"
                       Visibility="{Binding ElementName=thisWindow, Path=AllErrorsVM.VisibleErrorName,Converter={StaticResource BooleanToVisibilityConverter}}"
                       Foreground="Red"/>
                <Label Content="Podaj wiek:"/>
                <TextBox Text="{Binding ElementName=thisWindow, Path=AllErrorsVM.StrAge}"/>
                <TextBlock Text="{Binding ElementName=thisWindow, Path=AllErrorsVM.MessageErrorAge}"
                       Visibility="{Binding ElementName=thisWindow, Path=AllErrorsVM.VisibleErrorAge,Converter={StaticResource BooleanToVisibilityConverter}}"
                       Foreground="Red"/>
            </StackPanel>
            <Button Content="Sprawdź (bindowanie, wszystkie błędy)"
                Command="{Binding ElementName=thisWindow, Path=AllErrorsVM.CommandCheckBindingAllErrors}"
                Margin="10"/>
            <StackPanel>
                <TextBlock Text="{Binding ElementName=thisWindow,Path=AllErrorsVM.HelloMessage}"/>
                <TextBlock Text="{Binding ElementName=thisWindow,Path=AllErrorsVM.LegalAgeMessage}"/>
            </StackPanel>
        </StackPanel>
        <!--#endregion-->

        <!--#region Wersja z bindowaniem i wszystkimi błędami oraz validacja po stronie widoku-->
        <StackPanel Grid.Column="1" Grid.Row="1">
            <TextBlock Text="Wersja z bindowaniem i wszystkimi błędami oraz validacja po stronie widoku" 
                   HorizontalAlignment="Center"
                   FontSize="20" 
                   FontWeight="Bold"
                   TextWrapping="Wrap"/>
            <StackPanel>
                <!--Style="{StaticResource textBoxError}"-->
                <TextBlock Text="Podaj imie:"/>
                <TextBox Name="textBoxFirstName"
                         Validation.ErrorTemplate="{StaticResource errorTemplate}"
                         Margin="0,0,30,0">
                    <TextBox.Text>
                        <Binding ElementName="thisWindow" Path="OnlyDataVM.Name" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <xamlValidators:ValidateStringEmpty ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Ciąg znaków jest pusty" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip"
                                            Value="{Binding  RelativeSource={x:Static RelativeSource.Self},
                                            Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Label Content="Podaj wiek:"/>
                <TextBox x:Name="textBoxAge"
                         Margin="0,0,30,0">
                    <TextBox.Text>
                        <Binding ElementName="thisWindow" Path="OnlyDataVM.Age" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource StringToIntConverter}">
                            <Binding.ValidationRules >
                                <xamlValidators:ValidateStringEmpty ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Ciąg znaków jest pusty" />
                                <xamlValidators:ValidateStringIsNumber ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Podana wartość nie jest liczbą" />
                                <xamlValidators:ValidateStringNumberIsInRange ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wartość jest poza zakresem"
                                     LowRange="1"
                                     HighRange="130"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Text="{Binding ElementName=textBoxAge, Path=(Validation.Errors)[0].ErrorContent}"
                           Foreground="Red">
                    <!--Style="{StaticResource textBlockError}"-->
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=textBoxAge, Path=(Validation.HasError)}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
            <Button Content="Sprawdź (bindowanie, wszystkie błędy)"
                Command="{Binding ElementName=thisWindow, Path=OnlyDataVM.CommandCheckBinding}"
                Margin="10">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <Setter Property="IsEnabled" Value="true" />
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=textBoxFirstName,
                            Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=textBoxAge,
                            Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        <!--#endregion-->

        <!--#region Wersja z bindowaniem i wszystkimi błędami oraz validacja po stronie widoku-->
        <StackPanel Grid.Column="0" Grid.Row="2">
            <TextBlock Text="Wersja z bindowaniem i wszystkimi błędami oraz validacja po stronie widoku (zbiorcza)" 
                   HorizontalAlignment="Center"
                   FontSize="20" 
                   FontWeight="Bold"
                   TextWrapping="Wrap"/>
            <StackPanel x:Name="Form"
                        validation:Scope.ForInputTypes="TextBox">
                <TextBlock Text="Podaj imie:"/>
                <TextBox Name="tbFirstName"
                         Validation.ErrorTemplate="{StaticResource errorTemplate}"
                         Margin="0,0,30,0">
                    <TextBox.Text>
                        <Binding ElementName="thisWindow" Path="OnlyDataVM.Name" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <xamlValidators:ValidateStringEmpty ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Ciąg znaków jest pusty" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Label Content="Podaj wiek:"/>
                <TextBox x:Name="tbAge"
                         Margin="0,0,30,0">
                    <TextBox.Text>
                        <Binding ElementName="thisWindow" Path="OnlyDataVM.Age" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource StringToIntConverter}">
                            <Binding.ValidationRules >
                                <xamlValidators:ValidateStringEmpty ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Ciąg znaków jest pusty" />
                                <xamlValidators:ValidateStringIsNumber ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Podana wartość nie jest liczbą" />
                                <xamlValidators:ValidateStringNumberIsInRange ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wartość jest poza zakresem"
                                     LowRange="1"
                                     HighRange="130"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>
            <Button Content="Sprawdź (bindowanie, wszystkie błędy)"
                    Command="{Binding ElementName=thisWindow, Path=OnlyDataVM.CommandCheckBinding}"
                    Margin="10"
                    IsEnabled="{Binding ElementName=Form,Path=(validation:Scope.HasError)}">
            </Button>
            <ItemsControl ItemsSource="{Binding Path=(validation:Scope.Errors), ElementName=Form}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type ValidationError}">
                        <TextBlock Foreground="Red"
                                   Text="{Binding ErrorContent}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
        <!--#endregion-->
    </Grid>
</Window>
