<!--1. Dodanie przycisków nawiasów '(' i ')'. Zadbać o widok.
2. Oprogramowanie tych przycisków w obu VM
3. Zmiana generatora onp do tych dwóch operatorów
4. Dodanie combobox'a z wyborem VM.
5. Aktywność znaku = -->
<Window x:Class="CalculatorWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CalculatorWPF" 
        xmlns:viewmodels="clr-namespace:CalculatorWPF.ViewModels" 
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:usercontrol="clr-namespace:CalculatorWPF.UserControlView"
        mc:Ignorable="d"
        Title="Nasz kalkulator" Height="450" Width="800">
    <Window.DataContext>
        <viewmodels:CalculationMethodVM/>
    </Window.DataContext>

    <!--zdarzenia dla całego okna czyli znacznika Window-->
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="KeyDown">
            <b:InvokeCommandAction Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <DockPanel>
        <TextBlock Text="Wybierz rodziaj kalkulatora:"
                   DockPanel.Dock="Top"/>
        <ComboBox DockPanel.Dock="Top"
                  Margin="10"
                  ItemsSource="{Binding ListOfViewModel}"
                  SelectedValue="{Binding ChoseVM}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding NameOfViewModel}"></TextBlock>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <usercontrol:CalculatorUC DataContext="{Binding ChoseVM}"/>
    </DockPanel>
</Window>